@model IEnumerable<MvcMovie.Models.Movie>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="row d-flex justify-content-start px-4">
        <a asp-action="Index" asp-route-id=@null class="btn btn-info col-1 mx-3">All</a>
    @foreach(var genre in ViewBag.genreList)
    {
        <a asp-action="Index" asp-route-id="@genre.Id" class="btn btn-info col-1 mx-3">@genre</a>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.genreMovie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>

                    @for(int i = 0; i < item.genreMovie.Count; i++)
                    {
                        @item.genreMovie.ElementAt(i).genre.Name
                        if(i < item.genreMovie.Count - 1)
                        {
                          @Html.Raw(", ")
                        }
                    }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
